Importing the function from the module:
>>> add_integer = __import__("0-add_integer").add_integer
Checking for module docstring:
	 >>> m = __import__("0-add_integer").__doc__
	 >>> len(m) > 1
	 True
Checking for function docstring:
	 >>> f = __import__("0-add_integer").add_integer.__doc__
         >>> len(f) > 1
         True
# Test adding two integers
>>> add_integer(1, 2)
3
# Test adding two floats, they should be cast to integers before addition
>>> add_integer(100.5, 200.7)
300
# Test adding a float and an implicit integer (b defaults to 98)
>>> add_integer(100.5)
198
# Test passing a string as an argument, should raise a TypeError
>>> add_integer("100", 200)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
# Test adding two negative integers
>>> add_integer(-1, -2)
-3
# Test adding a negative float and a positive integer
>>> add_integer(-100.5, 200)
99
# Test adding a negative integer and a positive float
>>> add_integer(-1, 2.5)
1
# Test adding two negative floats
>>> add_integer(-100.5, -200.5)
-301
# Test passing None as an argument, should raise a TypeError
>>> add_integer(None, 200)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
# Test adding a large integer and a small integer
>>> add_integer(999999999999999999999999999999, 1)
1000000000000000000000000000000
